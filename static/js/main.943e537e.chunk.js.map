{"version":3,"sources":["components/appHeader/AppHeader.js","components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","components/errorBoundary/ErrorBoundary.js","components/spinner/spinner.gif","components/spinner/Spinner.js","services/MarvelService.js","resources/img/mjolnir.png","components/randomChar/RandomChar.js","components/charList/CharList.js","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","resources/img/vision.png","components/app/App.js","index.js"],"names":["AppHeader","className","href","ErrorMessage","src","errorImg","alt","style","display","objectFit","margin","width","ErrorBoundary","state","error","errorInfo","console","log","this","setState","props","children","Component","Spinner","spinner","MarvelService","_apiBase","_apiKey","_baseOffset","getResource","url","a","fetch","res","ok","Error","status","json","getAllCharacters","offset","data","results","map","_transformCharacter","getCharacter","id","char","name","descr","description","slice","thumbnail","path","extension","homepage","urls","wiki","comics","items","RandomChar","loading","marvelService","onCharLoaded","onCharLoading","onError","onUpdChar","Math","floor","random","then","catch","errorMessage","content","onClick","mjolnir","View","noAvailableImg","CharList","charList","newItemsLoading","charEnded","onRequestLoad","onCharListLoading","onCharListLoaded","newCharList","ended","length","cardRefs","setRef","ref","push","onFocusCard","forEach","item","classList","remove","add","focus","renderCards","arr","cards","i","nameFontSize","fontSize","tabIndex","onSelectedChar","onKeyDown","e","code","cardsList","CharEnd","disabled","textAlign","marginTop","color","Skeleton","CharInfo","updateChar","chardId","prevProps","skeleton","noComics","App","selectedChar","decoration","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.943e537e.chunk.js","sourcesContent":["import './appHeader.scss';\n\nconst AppHeader = () => {\n    return (\n        <header className=\"app__header\">\n            <h1 className=\"app__title\">\n                <a href=\"#\">\n                    <span>Marvel</span> information portal\n                </a>\n            </h1>\n            <nav className=\"app__menu\">\n                <ul>\n                    <li><a href=\"#\">Characters</a></li>\n                    /\n                    <li><a href=\"#\">Comics</a></li>\n                </ul>\n            </nav>\n        </header>\n    )\n}\n\nexport default AppHeader;","export default __webpack_public_path__ + \"static/media/error.6a4da905.gif\";","import errorImg from './error.gif';\r\n\r\nconst ErrorMessage = () => {\r\n    return(\r\n        <img \r\n        src={errorImg} \r\n        alt=\"An error occurred...\"\r\n        style={{display: \"block\", objectFit: \"cover\", margin: \"0 auto\", width: \"250px\"}} />\r\n    )\r\n} \r\n\r\nexport default ErrorMessage;","import { Component } from \"react\";\r\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\r\n\r\nclass ErrorBoundary extends Component {\r\n    state = {\r\n        error: false\r\n    }\r\n\r\n    componentDidCatch(error, errorInfo) {\r\n        console.log(error, errorInfo);\r\n        this.setState({\r\n            error: true\r\n        })\r\n    }\r\n\r\n    render() {\r\n        if (this.state.error) {\r\n            return <ErrorMessage/>\r\n        }\r\n\r\n        return this.props.children;\r\n    }\r\n\r\n}\r\n\r\nexport default ErrorBoundary;","export default __webpack_public_path__ + \"static/media/spinner.5951f336.gif\";","import spinner from './spinner.gif'\r\n\r\nconst Spinner = () => {\r\n    return(\r\n            <img src={spinner}\r\n             alt=\"Loading...\"\r\n             style={{display: \"block\", margin: \"0 auto\", width: \"80px\"}} />\r\n    )\r\n}\r\n\r\nexport default Spinner;","class MarvelService {\r\n    _apiBase = 'https://gateway.marvel.com:443/v1/public/';\r\n    _apiKey = 'apikey=4401f517130c777c1466260993989258';\r\n    _baseOffset = 200;\r\n\r\n    getResource = async (url) => {\r\n        let res = await fetch(url);\r\n\r\n        if (!res.ok) {\r\n            throw new Error(`Couldn't fetch ${url}, status ${res.status}`);\r\n        }\r\n\r\n        return await res.json();\r\n    }\r\n\r\n    getAllCharacters = async (offset = this._baseOffset) => {\r\n        const res = await this.getResource(`${this._apiBase}characters?limit=9&offset=${offset}&${this._apiKey}`)\r\n        return res.data.results.map(this._transformCharacter);\r\n    }\r\n\r\n    getCharacter = async (id) => {\r\n        const res = await this.getResource(`${this._apiBase}characters/${id}?${this._apiKey}`);\r\n        return this._transformCharacter(res.data.results[0]);\r\n    }\r\n\r\n    _transformCharacter = (char) => {\r\n        return {\r\n            id: char.id,\r\n            name: char.name,\r\n            descr: char.description ? `${char.description.slice(0,180)}...` : 'There is no any information about this character',\r\n            thumbnail: char.thumbnail.path + \".\" + char.thumbnail.extension,\r\n            homepage: char.urls[0].url,\r\n            wiki: char.urls[1].url,\r\n            comics: char.comics.items\r\n        }\r\n    }\r\n}\r\n\r\nexport default MarvelService;","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","import { Component } from 'react';\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\nimport Spinner from '../spinner/Spinner';\r\nimport MarvelService from '../../services/MarvelService';\r\n\r\nimport './randomChar.scss';\r\nimport mjolnir from '../../resources/img/mjolnir.png';\r\n\r\nclass RandomChar extends Component {\r\n\r\n    state = {\r\n        char: {},\r\n        loading: true,\r\n        error: false\r\n    }\r\n\r\n    marvelService = new MarvelService();\r\n\r\n    componentDidMount() {\r\n        this.onUpdChar();\r\n    }\r\n\r\n    onCharLoaded = (char) => {\r\n        this.setState({\r\n            char,\r\n            loading: false\r\n        });\r\n    }\r\n\r\n    onCharLoading = () => {\r\n        this.setState({\r\n            loading: true\r\n        });\r\n    }\r\n\r\n    onError = () => {\r\n        this.setState({\r\n            loading: false,\r\n            error: true\r\n        })\r\n    }\r\n\r\n\r\n    onUpdChar = () => {\r\n        const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000);\r\n        this.onCharLoading();\r\n        this.marvelService\r\n        .getCharacter(id)\r\n        .then(this.onCharLoaded)\r\n        .catch(this.onError)\r\n    }\r\n\r\n    render() {\r\n        const {char, loading, error} = this.state;\r\n        const errorMessage = error ? <ErrorMessage/> : null;\r\n        const spinner = loading ? <Spinner/> : null;\r\n        const content = !(loading || error) ? <View char={char}/> : null;\r\n        return (\r\n            <div className=\"randomchar\">\r\n                {errorMessage}\r\n                {spinner}\r\n                {content}\r\n                <div className=\"randomchar__static\">\r\n                    <p className=\"randomchar__title\">\r\n                        Random character for today!<br/>\r\n                        Do you want to get to know him better?\r\n                    </p>\r\n                    <p className=\"randomchar__title\">\r\n                        Or choose another one\r\n                    </p>\r\n                    <button className=\"button button__main\">\r\n                        <div className=\"inner\" onClick={this.onUpdChar}>try it</div>\r\n                    </button>\r\n                    <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\"/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst View = ({char}) => {\r\n    const {name, descr, thumbnail, homepage, wiki} = char;\r\n    const noAvailableImg = thumbnail === \"http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg\" ? {objectFit: \"contain\"} : null;\r\n    return (\r\n        <div className=\"randomchar__block\">\r\n            <img src={thumbnail} alt=\"Random character\" className=\"randomchar__img\" style={noAvailableImg}/>\r\n            <div className=\"randomchar__info\">\r\n                <p className=\"randomchar__name\">{name}</p>\r\n                <p className=\"randomchar__descr\">\r\n                {descr}\r\n                </p>\r\n                <div className=\"randomchar__btns\">\r\n                    <a href={homepage} className=\"button button__main\">\r\n                        <div className=\"inner\">homepage</div>\r\n                    </a>\r\n                    <a href={wiki} className=\"button button__secondary\">\r\n                        <div className=\"inner\">Wiki</div>\r\n                    </a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RandomChar;","import { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\nimport Spinner from '../spinner/Spinner';\r\nimport MarvelService from '../../services/MarvelService';\r\n\r\nimport './charList.scss';\r\n\r\nclass CharList extends Component {\r\n\r\n    state = {\r\n        charList: [],\r\n        loading: true,\r\n        error: false,\r\n        newItemsLoading: false,\r\n        offset: 200,\r\n        charEnded: false\r\n    }\r\n\r\n    marvelService = new MarvelService();\r\n\r\n    componentDidMount() {\r\n        this.onRequestLoad()\r\n    }\r\n\r\n    onRequestLoad = (offset) => {\r\n        this.onCharListLoading();\r\n\r\n        this.marvelService\r\n        .getAllCharacters(offset)\r\n        .then(this.onCharListLoaded)\r\n        .catch(this.onError)\r\n    }\r\n\r\n    onCharListLoading = () => {\r\n        this.setState({\r\n            newItemsLoading: true\r\n        });\r\n    }\r\n\r\n    onCharListLoaded = (newCharList) => {\r\n        let ended = false;\r\n        if (newCharList.length < 9) {\r\n            ended = true\r\n        }\r\n\r\n        this.setState(({charList, offset}) => ({\r\n            charList: [...charList, ...newCharList],\r\n            loading: false,\r\n            newItemsLoading: false,\r\n            offset: offset + 9,\r\n            charEnded: ended\r\n        }));\r\n    }\r\n    \r\n    onError = () => {\r\n        this.setState({\r\n            loading: false,\r\n            error: true\r\n        })\r\n    }\r\n\r\n    cardRefs = [];\r\n\r\n    setRef = (ref) => {\r\n        this.cardRefs.push(ref)\r\n    }\r\n\r\n    onFocusCard = (id) => {\r\n        this.cardRefs.forEach(item => item.classList.remove('char__item_selected'));\r\n        this.cardRefs[id].classList.add('char__item_selected');\r\n        this.cardRefs[id].focus();\r\n    }\r\n\r\n    renderCards = (arr) => {\r\n        const cards = arr.map((item,i) => {\r\n            const nameFontSize = item.name.length > 30 ? {fontSize: \"21px\"} : null;\r\n            const noAvailableImg = item.thumbnail === \"http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg\" ? {objectFit: \"unset\"} : null;\r\n            \r\n            return(\r\n                <li \r\n                className=\"char__item\" \r\n                tabIndex={0}\r\n                key={item.id}\r\n                ref={this.setRef}\r\n                onClick={() => {\r\n                    this.props.onSelectedChar(item.id);\r\n                    this.onFocusCard(i)\r\n                }}\r\n                onKeyDown={(e) => {\r\n                    if (e.code === \"Enter\") {\r\n                        this.props.onSelectedChar(item.id);\r\n                        this.onFocusCard(i);\r\n                    }\r\n                }}>\r\n                    <img src={item.thumbnail} alt={item.name} style={noAvailableImg}/>\r\n                    <div className=\"char__name\" style={nameFontSize}>{item.name}</div>\r\n                </li>\r\n            )\r\n        })\r\n\r\n        return(\r\n            <ul className=\"char__grid\">\r\n                {cards}\r\n            </ul>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        const {charList, loading, error, newItemsLoading, offset, charEnded} = this.state;\r\n        const cardsList = this.renderCards(charList);\r\n\r\n        const errorMessage = error ? <ErrorMessage/> : null;\r\n        const spinner = loading ? <Spinner/> : null;\r\n        const content = !(loading || error) ? cardsList : null;\r\n\r\n        const CharEnd = charEnded ? \"No more characters\" : null\r\n\r\n        return (\r\n            <div className=\"char__list\">\r\n                {errorMessage}\r\n                {spinner}\r\n                {content}\r\n\r\n                <button \r\n                    className=\"button button__main button__long\"\r\n                    disabled={newItemsLoading}\r\n                    onClick={() => this.onRequestLoad(offset)}\r\n                    style={{display: charEnded ? \"none\" : \"block\"}}>\r\n                        <div className=\"inner\">load more</div>\r\n                </button>\r\n                <p style={{textAlign: \"center\", marginTop: \"20px\", color: \"red\", fontSize: \"26px\"}}>\r\n                    {CharEnd}\r\n                </p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nCharList.propTypes = {\r\n    onSelectedChar: PropTypes.func.isRequired\r\n}\r\n\r\nexport default CharList;","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport MarvelService from '../../services/MarvelService';\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\nimport Spinner from '../spinner/Spinner';\r\nimport Skeleton from '../skeleton/Skeleton'\r\n\r\nimport './charInfo.scss';\r\n\r\nclass CharInfo extends Component {\r\n    \r\n    state = {\r\n        char: null,\r\n        loading: false,\r\n        error: false\r\n    }\r\n\r\n    marvelService = new MarvelService();\r\n\r\n    componentDidMount() {\r\n        this.updateChar()\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if(this.props.chardId !== prevProps.chardId) {\r\n            this.updateChar();\r\n        }\r\n    }\r\n\r\n    updateChar = () => {\r\n        const {chardId} = this.props;\r\n\r\n        if(!chardId) {\r\n            return;\r\n        }\r\n\r\n        this.onCharLoading();\r\n\r\n        this.marvelService\r\n        .getCharacter(chardId)\r\n        .then(this.onCharLoaded)\r\n        .catch(this.onError)\r\n    }\r\n\r\n    onCharLoaded = (char) => {\r\n        this.setState({\r\n            char,\r\n            loading: false\r\n        });\r\n    }\r\n\r\n    onCharLoading = () => {\r\n        this.setState({\r\n            loading: true\r\n        });\r\n    }\r\n\r\n    onError = () => {\r\n        this.setState({\r\n            loading: false,\r\n            error: true\r\n        })\r\n    }\r\n    \r\n    render() {\r\n        const {char, loading, error} = this.state;\r\n\r\n        const skeleton = char || loading || error ? null : <Skeleton/>\r\n        const errorMessage = error ? <ErrorMessage/> : null;\r\n        const spinner = loading ? <Spinner/> : null;\r\n        const content = !(loading || error || !char) ? <View char={char}/> : null;\r\n\r\n        return (\r\n            <div className=\"char__info\">\r\n                {skeleton}\r\n                {errorMessage}\r\n                {spinner}\r\n                {content}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst View = ({char}) => {\r\n    const {name, descr, thumbnail, homepage, wiki, comics} = char;\r\n    const noAvailableImg = thumbnail === \"http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg\" ? {objectFit: \"contain\"} : null;\r\n    const noComics = comics.length === 0 ? \"No available comics with this character\" : null;\r\n    return(\r\n        <>\r\n            <div className=\"char__basics\">\r\n                <img src={thumbnail} alt={name} style={noAvailableImg}/>\r\n                <div>\r\n                    <div className=\"char__info-name\">{name}</div>\r\n                    <div className=\"char__btns\">\r\n                        <a href={homepage} className=\"button button__main\">\r\n                            <div className=\"inner\">homepage</div>\r\n                        </a>\r\n                        <a href={wiki} className=\"button button__secondary\">\r\n                            <div className=\"inner\">Wiki</div>\r\n                        </a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"char__descr\">\r\n                {descr}\r\n            </div>\r\n            <div className=\"char__comics\">Comics:</div>\r\n            <ul className=\"char__comics-list\">\r\n                {noComics}\r\n                {   comics.map((item, i) => {\r\n                        if (i < 10) {\r\n                            return (\r\n                                <li key={i} className=\"char__comics-item\">\r\n                                    {item.name}\r\n                                </li>\r\n                            )\r\n                        }\r\n                    })\r\n                }\r\n            </ul>\r\n        </>\r\n    )\r\n}\r\n\r\nCharInfo.propTypes = {\r\n    chardId: PropTypes.number\r\n}\r\n\r\nexport default CharInfo;","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import { Component } from \"react\";\r\n\r\nimport AppHeader from \"../appHeader/AppHeader\";\r\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\r\nimport RandomChar from \"../randomChar/RandomChar\";\r\nimport CharList from \"../charList/CharList\";\r\nimport CharInfo from \"../charInfo/CharInfo\";\r\n\r\nimport decoration from '../../resources/img/vision.png';\r\n\r\nclass App extends Component {\r\n\r\n    state = {\r\n        selectedChar: null\r\n    }\r\n\r\n    onSelectedChar = (id) => {\r\n        this.setState({\r\n            selectedChar: id\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"app\">\r\n                <AppHeader/>\r\n                <main>\r\n                    <ErrorBoundary>\r\n                        <RandomChar/>\r\n                    </ErrorBoundary>\r\n                    <div className=\"char__content\">\r\n                        <ErrorBoundary>\r\n                            <CharList onSelectedChar={this.onSelectedChar}/>\r\n                        </ErrorBoundary>\r\n                        <ErrorBoundary>\r\n                            <CharInfo chardId={this.state.selectedChar}/>\r\n                        </ErrorBoundary>\r\n                    </div>\r\n                    <img className=\"bg-decoration\" src={decoration} alt=\"vision\"/>\r\n                </main>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/app/App';\r\n//import MarvelService from './services/MarvelService';\r\nimport './style/style.scss';\r\n\r\n\r\n//const marvelService = new MarvelService();\r\n//marvelService.getAllCharacters().then(res => res.data.results.forEach(item => console.log(item.name)));\r\n//marvelService.getCharacter(1011334).then(res => console.log(res));\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}